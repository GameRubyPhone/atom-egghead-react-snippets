# Generated with Atomizr v0.15.0 - https://github.com/idleberg/atomizr
'.source.js.jsx':
  'ES6 React.Component class':
    'prefix': '6rec'
    'body': """
      class $1 extends React.Component {
        constructor(props) {
          super(props)
          this.state = { }
        }

        render() {
          $0
        }
      }
    """
  'ES6 React componentDidMount':
    'prefix': '6cd'
    'body': """
      componentDidMount(){
      	$0
      }
    """
  'ES6 React componentWillMount':
    'prefix': '6cw'
    'body': """
      componentWillMount(){
      	$0
      }
    """
  'ES6 React componentDidUpdate':
    'prefix': '6cdu'
    'body': """
      componentDidUpdate(prevProps, prevState) {
        $0
      }
    """
  'ES6 React componentWillReceiveProps':
    'prefix': '6cwr'
    'body': """
      componentWillReceiveProps(nextProps){
      	$0
      }
    """
  'ES6 React componentWillUpdate':
    'prefix': '6cwup'
    'body': """
      componentWillUpdate(nextProps, nextState) {
        $0
      }
    """
  'ES6 React shouldComponentUpdate':
    'prefix': '6scu'
    'body': """
      shouldComponentUpdate(nextProps, nextState) {
        return ;
      }
    """
  'React ChildContextTypes':
    'prefix': 'ctt'
    'body': """
      childContextTypes: {
        $0
      },
    """
  'React contextTypes':
    'prefix': 'cty'
    'body': """
      contextTypes: {
        $0
      },
    """
  'React getChildContext':
    'prefix': 'gc'
    'body': """
      getChildContext: function() {
        return {
          $1
        }
      },
    """
  'React withContext':
    'prefix': 'rwc'
    'body': """
      React.withContext({$1}, function(){
        React.render(<${2:Component} />, document.$0);
      })
    """
  'React.createElement()':
    'prefix': 'rc'
    'body': 'React.createElement(\'$1\', $2, $3)$0'
  'React.createFactory()':
    'prefix': 'rcf'
    'body': 'React.createFactory($1)$0'
  'onBlur':
    'prefix': 'onbl'
    'body': 'onBlur$0'
  'onChange':
    'prefix': 'onch'
    'body': 'onChange$0'
  'onClick':
    'prefix': 'oncl'
    'body': 'onClick$0'
  'onContextMenu':
    'prefix': 'oncm'
    'body': 'onContextMenu$0'
  'onCopy':
    'prefix': 'onco'
    'body': 'onCopy$0'
  'onCut':
    'prefix': 'onct'
    'body': 'onCut$0'
  'onDoubleClick':
    'prefix': 'ondc'
    'body': 'onDoubleClick$0'
  'onDragEnd':
    'prefix': 'onde'
    'body': 'onDragEnd$0'
  'onDragEnter':
    'prefix': 'onden'
    'body': 'onDragEnter$0'
  'onDragExit':
    'prefix': 'ondex'
    'body': 'onDragExit$0'
  'onDragLeave':
    'prefix': 'ondl'
    'body': 'onDragLeave$0'
  'onDragOver':
    'prefix': 'ondo'
    'body': 'onDragOver$0'
  'onDragStart':
    'prefix': 'onds'
    'body': 'onDragStart$0'
  'onDrop':
    'prefix': 'ondr'
    'body': 'onDrop$0'
  'onFocus':
    'prefix': 'onfo'
    'body': 'onFocus$0'
  'onInput':
    'prefix': 'onin'
    'body': 'onInput$0'
  'onKeyDown':
    'prefix': 'onkd'
    'body': 'onKeyDown$0'
  'onKeyPress':
    'prefix': 'onkp'
    'body': 'onKeyPress$0'
  'onKeyUp':
    'prefix': 'onku'
    'body': 'onKeyUp$0'
  'onMouseDown':
    'prefix': 'onmd'
    'body': 'onMouseDown$0'
  'onMouseEnter':
    'prefix': 'onme'
    'body': 'onMouseEnter$0'
  'onMouseLeave':
    'prefix': 'onml'
    'body': 'onMouseLeave$0'
  'onMouseMove':
    'prefix': 'onmm'
    'body': 'onMouseMove$0'
  'onMouseOut':
    'prefix': 'onmo'
    'body': 'onMouseOut$0'
  'onMouseOver':
    'prefix': 'onmov'
    'body': 'onMouseOver$0'
  'onMouseUp':
    'prefix': 'onmu'
    'body': 'onMouseUp$0'
  'onPaste':
    'prefix': 'onpa'
    'body': 'onPaste$0'
  'onScroll':
    'prefix': 'onsc'
    'body': 'onScroll$0'
  'onSubmit':
    'prefix': 'onsu'
    'body': 'onSubmit$0'
  'onTouchCancel':
    'prefix': 'ontc'
    'body': 'onTouchCancel$0'
  'onTouchEnd':
    'prefix': 'onte'
    'body': 'onTouchEnd$0'
  'onTouchMove':
    'prefix': 'ontm'
    'body': 'onTouchMove$0'
  'onTouchStart':
    'prefix': 'onts'
    'body': 'onTouchStart$0'
  'onWheel':
    'prefix': 'onwh'
    'body': 'onWheel$0'
  'import react':
    'prefix': 'imr'
    'body': 'import React from \'react\';'
  'propTypes':
    'prefix': 'pt'
    'body': """
      propTypes: {
      	$0
      },
    """
  'React.PropTypes':
    'prefix': 'rp'
    'body': 'React.PropTypes.$0'
  'React.PropTypes.array':
    'prefix': 'rpa'
    'body': 'React.PropTypes.array$0'
  'React.PropTypes.arrayOf':
    'prefix': 'rpao'
    'body': 'React.PropTypes.arrayOf($0)'
  'React.PropTypes.boolean':
    'prefix': 'rpb'
    'body': 'React.PropTypes.boolean$0'
  'React.PropTypes.element':
    'prefix': 'rpe'
    'body': 'React.PropTypes.element$0'
  'React.PropTypes.func':
    'prefix': 'rpf'
    'body': 'React.PropTypes.func$0'
  'React.PropTypes.instanceOf':
    'prefix': 'rpi'
    'body': 'React.PropTypes.instanceOf($0)'
  'React.PropTypes.number':
    'prefix': 'rpn'
    'body': 'React.PropTypes.number$0'
  'React.PropTypes.object':
    'prefix': 'rpobj'
    'body': 'React.PropTypes.object$0'
  'React.PropTypes.oneOf':
    'prefix': 'rpo'
    'body': 'React.PropTypes.oneOf([\'$0\'])'
  'React.PropTypes.oneOfType':
    'prefix': 'rpot'
    'body': 'React.PropTypes.oneOfType[]'
  'React.PropTypes.shape':
    'prefix': 'rpsh'
    'body': """
      React.PropTypes.shape({
      	$0
      })
    """
  'React.PropTypes.string':
    'prefix': 'rps'
    'body': 'React.PropTypes.string$0'
  'React this.setProps':
    'prefix': 'sp'
    'body': 'this.setProps({$0})'
  'React this.setState':
    'prefix': 'ss'
    'body': 'this.setState({$0})'
  'React this.context':
    'prefix': 'thisc'
    'body': 'this.context.$0'
  'React this.props':
    'prefix': 'thisp'
    'body': 'this.props.$0'
  'React this.refs':
    'prefix': 'thisr'
    'body': 'this.refs.$0'
  'React this.state':
    'prefix': 'thiss'
    'body': 'this.state.$0'
